name: SonarAnalysis

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs: 
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time.
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

    # PR Accepted
    - name: Quality Check passed, PR acceped
      uses: hmarr/auto-approve-action@v2.0.0 
      if: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }} == 'PASSED' 
      with:
       github-token: ${{ secrets.GITHUB_TOKEN }}

    # Login Jira
    - name: Login Jira
      uses: atlassian/gajira-login@v3
      env:
        JIRA_BASE_URL: ${{ vars.JIRA_BASE_URL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}

    # Create New Jira Task
    - name: Create Jira Task
      uses: atlassian/gajira-create@v3
      if: ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }} == 'PASSED' 
      with:
        project: JZ05
        issuetype: Build
        description: Created automatically via GitHub Actions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

       
      
